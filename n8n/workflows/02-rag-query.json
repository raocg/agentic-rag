{
  "name": "RAG - Query and Response",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "query",
        "options": {}
      },
      "id": "webhook-query-01",
      "name": "Webhook - Receive Query",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "query-webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "assign-01",
              "name": "query",
              "value": "={{ $json.body.query }}",
              "type": "string"
            },
            {
              "id": "assign-02",
              "name": "top_k",
              "value": "={{ $json.body.top_k || 5 }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "extract-params-01",
      "name": "Extract Query Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [450, 300]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "embeddings-query-01",
      "name": "Create Query Embedding",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [650, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "qdrantCollection": "documents",
        "topK": "={{ $json.top_k }}",
        "options": {
          "qdrantUrl": "http://qdrant:6333"
        }
      },
      "id": "vector-search-01",
      "name": "Search Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "operation": "aggregate",
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "pageContent",
              "operation": "concatenate",
              "outputFieldName": "context"
            }
          ]
        },
        "options": {}
      },
      "id": "aggregate-context-01",
      "name": "Aggregate Context",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "assign-prompt-01",
              "name": "prompt",
              "value": "=You are a helpful AI assistant. Use the following context to answer the user's question.\n\nContext:\n{{ $json.context }}\n\nQuestion: {{ $('Extract Query Parameters').item.json.query }}\n\nAnswer:",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "build-prompt-01",
      "name": "Build Prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [1250, 300]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {
          "temperature": 0.7,
          "maxTokens": 500
        },
        "prompt": "={{ $json.prompt }}"
      },
      "id": "llm-response-01",
      "name": "Generate Response",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [1450, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"query\": $('Extract Query Parameters').item.json.query, \"answer\": $json.response, \"sources_count\": $('Search Vector Store').item.json.length } }}"
      },
      "id": "respond-query-01",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1650, 300]
    }
  ],
  "connections": {
    "Webhook - Receive Query": {
      "main": [
        [
          {
            "node": "Extract Query Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Query Parameters": {
      "main": [
        [
          {
            "node": "Create Query Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Query Embedding": {
      "main": [
        [
          {
            "node": "Search Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Vector Store": {
      "main": [
        [
          {
            "node": "Aggregate Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Context": {
      "main": [
        [
          {
            "node": "Build Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Prompt": {
      "main": [
        [
          {
            "node": "Generate Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z",
      "id": "1",
      "name": "RAG"
    },
    {
      "createdAt": "2025-01-01T00:00:00.000Z",
      "updatedAt": "2025-01-01T00:00:00.000Z",
      "id": "3",
      "name": "Query"
    }
  ],
  "meta": {
    "instanceId": "agentic-rag-instance"
  }
}
